# generate an include/__version.h file reflecting the current git branch and commit number

import datetime

import subprocess

def make_version_header():
    # dont track changes to the output file
    subprocess.run(["git", "update-index", "--skip-worktree", "include/__version.h"])

    # fetch branch info from git
    ret = subprocess.run(["git", "rev-parse", "--abbrev-ref", "HEAD"], stdout=subprocess.PIPE, text=True)
    build_version = ret.stdout.strip()
    ret = subprocess.run(["git", "rev-parse", "--short", "HEAD"], stdout=subprocess.PIPE, text=True)
    build_version += " "
    build_version += ret.stdout.strip()

    ret = subprocess.run(["git", "diff", "HEAD"], stdout=subprocess.PIPE, text=True)
    status = " clean" if ret.stdout.strip()=="" else " (dirty)"
    build_version += status

    print ("build_version = " + build_version)

    # write to file
    f = open("include/__version.h","w")
    f.write("// do not edit this file - automatically generated during build\n")
    f.write("// regenerated at %s\n\n" % datetime.datetime.now())
    f.write("#define COMMIT_INFO \"" + build_version + "\"\n\n")
    f.close()

make_version_header()
